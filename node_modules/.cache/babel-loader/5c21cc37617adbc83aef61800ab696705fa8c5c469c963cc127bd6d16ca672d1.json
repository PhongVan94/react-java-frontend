{"ast":null,"code":"import { loginUser } from \"../../services/userServices\";\nimport { toast } from \"react-toastify\";\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN';\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_REFRESH = 'USER_REFRESH';\nexport const handleLoginRedux = (valueLogin, password) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: FETCH_USER_LOGIN\n    });\n    let response = await loginUser(valueLogin, password);\n    if (response && +response.EC === 0) {\n      //success\n      let groupWithRoles = response.DT.groupWithRoles;\n      let email = response.DT.email;\n      let username = response.DT.username;\n      let token = response.DT.token;\n      let data = {\n        isAuthenticated: true,\n        token,\n        account: {\n          groupWithRoles,\n          email,\n          username\n        }\n      };\n      localStorage.setItem('jwt', token);\n\n      // loginContext(data);\n\n      history.push(\"/users\");\n      dispatch({\n        type: FETCH_USER_SUCCESS,\n        data: {\n          email: valueLogin.trim(),\n          token: res.token\n        }\n      });\n    } else {\n      //error\n      if (response && +response.EC !== 0) {\n        //error\n        toast.error(response.EM);\n      }\n      dispatch({\n        type: FETCH_USER_ERROR\n      });\n    }\n  };\n};\nexport const handleLogoutRedux = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: USER_LOGOUT\n    });\n  };\n};\nexport const handleRefresh = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: USER_REFRESH\n    });\n  };\n};","map":{"version":3,"names":["loginUser","toast","FETCH_USER_LOGIN","FETCH_USER_ERROR","FETCH_USER_SUCCESS","USER_LOGOUT","USER_REFRESH","handleLoginRedux","valueLogin","password","dispatch","getState","type","response","EC","groupWithRoles","DT","email","username","token","data","isAuthenticated","account","localStorage","setItem","history","push","trim","res","error","EM","handleLogoutRedux","handleRefresh"],"sources":["C:/Users/admin/Downloads/Study/JavaWeb2024/react-frontend-java/src/components/redux/actions/userAction.js"],"sourcesContent":["import {loginUser} from \"../../services/userServices\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_REFRESH = 'USER_REFRESH';\r\n\r\nexport const handleLoginRedux = (valueLogin, password) => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({type: FETCH_USER_LOGIN});\r\n\r\n        let response = await loginUser(valueLogin, password);\r\n        if (response && +response.EC === 0) {\r\n            //success\r\n            let groupWithRoles = response.DT.groupWithRoles;\r\n            let email = response.DT.email;\r\n            let username = response.DT.username;\r\n            let token = response.DT.token;\r\n            let data = {\r\n                isAuthenticated: true,\r\n                token,\r\n                account: {groupWithRoles, email, username}\r\n            }\r\n\r\n            localStorage.setItem('jwt', token)\r\n\r\n            // loginContext(data);\r\n\r\n            history.push(\"/users\");\r\n            dispatch({\r\n                type: FETCH_USER_SUCCESS,\r\n                data: {email: valueLogin.trim(), token: res.token}\r\n            });\r\n        }\r\n\r\nelse\r\n    {\r\n        //error\r\n        if (response && +response.EC !== 0) {\r\n            //error\r\n            toast.error(response.EM)\r\n        }\r\n        dispatch({\r\n            type: FETCH_USER_ERROR\r\n        });\r\n\r\n    }\r\n\r\n}\r\n}\r\nexport const handleLogoutRedux = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: USER_LOGOUT\r\n        })\r\n    }\r\n}\r\n\r\nexport const handleRefresh = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: USER_REFRESH\r\n        })\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,6BAA6B;AACrD,SAAQC,KAAK,QAAO,gBAAgB;AAGpC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AAEtD,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,YAAY,GAAG,cAAc;AAE1C,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EACtD,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjCD,QAAQ,CAAC;MAACE,IAAI,EAAEV;IAAgB,CAAC,CAAC;IAElC,IAAIW,QAAQ,GAAG,MAAMb,SAAS,CAACQ,UAAU,EAAEC,QAAQ,CAAC;IACpD,IAAII,QAAQ,IAAI,CAACA,QAAQ,CAACC,EAAE,KAAK,CAAC,EAAE;MAChC;MACA,IAAIC,cAAc,GAAGF,QAAQ,CAACG,EAAE,CAACD,cAAc;MAC/C,IAAIE,KAAK,GAAGJ,QAAQ,CAACG,EAAE,CAACC,KAAK;MAC7B,IAAIC,QAAQ,GAAGL,QAAQ,CAACG,EAAE,CAACE,QAAQ;MACnC,IAAIC,KAAK,GAAGN,QAAQ,CAACG,EAAE,CAACG,KAAK;MAC7B,IAAIC,IAAI,GAAG;QACPC,eAAe,EAAE,IAAI;QACrBF,KAAK;QACLG,OAAO,EAAE;UAACP,cAAc;UAAEE,KAAK;UAAEC;QAAQ;MAC7C,CAAC;MAEDK,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,KAAK,CAAC;;MAElC;;MAEAM,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MACtBhB,QAAQ,CAAC;QACLE,IAAI,EAAER,kBAAkB;QACxBgB,IAAI,EAAE;UAACH,KAAK,EAAET,UAAU,CAACmB,IAAI,CAAC,CAAC;UAAER,KAAK,EAAES,GAAG,CAACT;QAAK;MACrD,CAAC,CAAC;IACN,CAAC,MAGL;MACI;MACA,IAAIN,QAAQ,IAAI,CAACA,QAAQ,CAACC,EAAE,KAAK,CAAC,EAAE;QAChC;QACAb,KAAK,CAAC4B,KAAK,CAAChB,QAAQ,CAACiB,EAAE,CAAC;MAC5B;MACApB,QAAQ,CAAC;QACLE,IAAI,EAAET;MACV,CAAC,CAAC;IAEN;EAEJ,CAAC;AACD,CAAC;AACD,OAAO,MAAM4B,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAO,CAACrB,QAAQ,EAAEC,QAAQ,KAAK;IAC3BD,QAAQ,CAAC;MACLE,IAAI,EAAEP;IACV,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAM2B,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,CAACtB,QAAQ,EAAEC,QAAQ,KAAK;IAC3BD,QAAQ,CAAC;MACLE,IAAI,EAAEN;IACV,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}