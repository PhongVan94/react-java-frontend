{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n// Create an Axios instance with default configuration\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true\n});\n\n// Set Authorization header using the stored JWT token\nconst token = localStorage.getItem('jwt');\n// if (token) {\ninstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n// }\n\n// Add a request interceptor\ninstance.interceptors.request.use(function (config) {\n  // Do something before request is sent\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\ninstance.interceptors.response.use(function (response) {\n  // Do something with response data\n  return response.data;\n}, function (error) {\n  var _error$response;\n  const status = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 500;\n\n  // Handle different HTTP status codes\n  switch (status) {\n    case 401:\n      if (window.location.pathname !== '/' && window.location.pathname !== '/login' && window.location.pathname !== '/register') {\n        toast.error('Unauthorized user. Please login...');\n      }\n      return error.response.data;\n    case 403:\n      toast.error('You don\\'t have permission to access!');\n      return Promise.reject(error);\n    case 400:\n    case 404:\n    case 409:\n    case 422:\n      return Promise.reject(error);\n    default:\n      return Promise.reject(error);\n  }\n});\nexport default instance;","map":{"version":3,"names":["axios","toast","instance","create","baseURL","withCredentials","token","localStorage","getItem","defaults","headers","common","interceptors","request","use","config","error","Promise","reject","response","data","_error$response","status","window","location","pathname"],"sources":["C:/Users/admin/Downloads/Study/JavaWeb2024/react-frontend-java/src/components/setups/customize-axios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Create an Axios instance with default configuration\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n    withCredentials: true,\r\n});\r\n\r\n// Set Authorization header using the stored JWT token\r\nconst token = localStorage.getItem('jwt');\r\n// if (token) {\r\n  instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n// }\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        // Do something before request is sent\r\n\r\n        return config;\r\n    },\r\n    function (error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        // Do something with response data\r\n        return response.data;\r\n    },\r\n    function (error) {\r\n        const status = error?.response?.status || 500;\r\n\r\n        // Handle different HTTP status codes\r\n        switch (status) {\r\n            case 401:\r\n                if (window.location.pathname !== '/' &&\r\n                    window.location.pathname !== '/login' &&\r\n                    window.location.pathname !== '/register') {\r\n                    toast.error('Unauthorized user. Please login...');\r\n                }\r\n                return error.response.data;\r\n\r\n            case 403:\r\n                toast.error('You don\\'t have permission to access!');\r\n                return Promise.reject(error);\r\n\r\n            case 400:\r\n            case 404:\r\n            case 409:\r\n            case 422:\r\n                return Promise.reject(error);\r\n\r\n            default:\r\n                return Promise.reject(error);\r\n        }\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,gBAAgB;;AAEpC;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;AACzC;AACEN,QAAQ,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASL,KAAM,EAAC;AACvE;;AAEA;AACAJ,QAAQ,CAACU,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7B,UAAUC,MAAM,EAAE;EACd;;EAEA,OAAOA,MAAM;AACjB,CAAC,EACD,UAAUC,KAAK,EAAE;EACb;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAd,QAAQ,CAACU,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC9B,UAAUK,QAAQ,EAAE;EAChB;EACA,OAAOA,QAAQ,CAACC,IAAI;AACxB,CAAC,EACD,UAAUJ,KAAK,EAAE;EAAA,IAAAK,eAAA;EACb,MAAMC,MAAM,GAAG,CAAAN,KAAK,aAALA,KAAK,wBAAAK,eAAA,GAALL,KAAK,CAAEG,QAAQ,cAAAE,eAAA,uBAAfA,eAAA,CAAiBC,MAAM,KAAI,GAAG;;EAE7C;EACA,QAAQA,MAAM;IACV,KAAK,GAAG;MACJ,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,GAAG,IAChCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,IACrCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EAAE;QAC1CxB,KAAK,CAACe,KAAK,CAAC,oCAAoC,CAAC;MACrD;MACA,OAAOA,KAAK,CAACG,QAAQ,CAACC,IAAI;IAE9B,KAAK,GAAG;MACJnB,KAAK,CAACe,KAAK,CAAC,uCAAuC,CAAC;MACpD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAEhC,KAAK,GAAG;IACR,KAAK,GAAG;IACR,KAAK,GAAG;IACR,KAAK,GAAG;MACJ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAEhC;MACI,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EACpC;AACJ,CACJ,CAAC;AAED,eAAed,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}